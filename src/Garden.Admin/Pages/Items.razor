@page "/Items"
@using Garden.Shared.Models
@using System.Net.Http.Headers
@using System.Security.Authentication
@using System.Text.Json

@inject IHttpClientFactory HttpClientFactory
@inject TokenService TokenService

<NavMenu />

<div class="max-w-5xl mx-auto">
  <h3 class="text-4xl">Items</h3>
  
  <TableTemplate Items="_items" Context="item">
    <TableHeader>
      <th>Name</th>
      <th>Version</th>
    </TableHeader>
    <RowTemplate>
      <td>@item.Name</td>
      <td>@item.Version</td>
    </RowTemplate>
  </TableTemplate>
</div>

@code {
  private List<Item> _items = new();
  
  protected override async Task<Task> OnInitializedAsync()
  {

    try
    {
      var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7161/garden/items/latest");
      request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", await TokenService.GetToken());

      var client = HttpClientFactory.CreateClient();
      var response = await client.SendAsync(request);

      await using var responseStream = await response.Content.ReadAsStreamAsync();

      var content = await JsonSerializer.DeserializeAsync<List<Item>>(responseStream);

      if (!response.IsSuccessStatusCode)
        throw new HttpRequestException();

      if (content != null)
        _items = content;

    }
    catch (AuthenticationException e)
    {
      // TODO: handle authentication exception
    }
    catch (HttpRequestException e)
    {
      // TODO: handle other errors.
    }
    
    return base.OnInitializedAsync();
  }

}